{
    // Editor appearance
    "editor.fontFamily": "JetBrains Mono",
    "editor.fontSize": 25,
    "editor.lineHeight": 1.5,
    "editor.fontLigatures": true,
    "editor.minimap.enabled": true,
    "editor.minimap.renderCharacters": false,
    "editor.renderWhitespace": "boundary",
    "editor.rulers": [80, 120],
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.semanticHighlighting.enabled": true,
    "editor.suggestSelection": "first",
    "editor.acceptSuggestionOnEnter": "smart",
    "editor.snippetSuggestions": "top",
    "editor.wordBasedSuggestions": "matchingDocuments",
    "editor.parameterHints.enabled": true,
    "editor.inlineSuggest.enabled": true,
    "editor.stickyScroll.enabled": true,
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.cursorStyle": "line",
    "editor.mouseWheelZoom": true,
    "editor.smoothScrolling": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.fixAll": "explicit",
        "source.organizeImports": "explicit"
    },

    // Workbench settings
    "workbench.colorTheme": "Gruvbox Dark Hard",
    "workbench.iconTheme": "vscode-icons",
    "workbench.editor.showTabs": "multiple",
    "workbench.editor.enablePreview": false,
    "workbench.editor.closeEmptyGroups": false,
    "workbench.editor.focusRecentEditorAfterClose": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.tabSizing": "shrink",
    "workbench.sideBar.location": "left",
    "workbench.tree.indent": 16,
    "workbench.tree.renderIndentGuides": "always",
    "workbench.list.automaticKeyboardNavigation": true,
    "workbench.startupEditor": "none",

    // Terminal settings
    "terminal.integrated.fontFamily": "JetBrains Mono",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.shell.osx": "/bin/zsh",
    "terminal.integrated.shellArgs.osx": ["-l"],
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.enableMultiLinePasteWarning": false,

    // File settings
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.exclude": {
        "": true,
        "**/.DS_Store": true,
        "**/.git": true,
        "**/.hg": true,
        "**/.svn": true,
        "**/CVS": true,
        "**/Thumbs.db": true
    },

    // Search settings
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/bin": true,
        "**/obj": true,
        "**/.git": true
    },
    "search.smartCase": true,
    "search.useGlobalIgnoreFiles": true,
    "search.useIgnoreFiles": true,

    // Git settings (previously configured)
    "gitlens.codeLens.enabled": true,
    "gitlens.currentLine.enabled": true,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.blame.highlight.enabled": true,
    "gitlens.statusBar.enabled": true,
    "gitlens.hovers.enabled": true,
    "gitlens.blame.format": "${author|10} ${agoOrDate|14-} ${message|50?}",
    "gitlens.defaultDateFormat": "YYYY-MM-DD HH:mm",
    "gitlens.blame.heatmap.enabled": true,
    "gitlens.blame.avatars": true,
    "gitlens.blame.compact": false,
    "gitlens.blame.toggleMode": "window",
    "gitlens.blame.highlight.locations": ["gutter", "line", "overview"],
    "gitlens.codeLens.authors.enabled": true,
    "gitlens.codeLens.recentChange.enabled": true,
    "gitlens.menus": {
        "editor": {
            "blame": true,
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        },
        "editorGroup": {
            "blame": true,
            "compare": true
        },
        "editorTab": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        },
        "explorer": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        }
    },

    // Language-specific settings
    "[csharp]": {
        "editor.defaultFormatter": "ms-dotnettools.csharp",
        "editor.formatOnType": true,
        "editor.formatOnSave": true
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[xml]": {
        "editor.defaultFormatter": "redhat.vscode-xml",
        "editor.formatOnSave": true
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml",
        "editor.formatOnSave": true
    },
    "[markdown]": {
        "editor.defaultFormatter": "davidanson.vscode-markdownlint",
        "editor.formatOnSave": true
    },

    // Testing settings
    "testing.automaticallyOpenPeekView": "never",
    "testing.followRunningTest": true,
    "testing.gutterEnabled": true,
    "testing.openTesting": "neverOpen",

    // Debug settings
    "debug.toolBarLocation": "docked",
    "debug.inlineValues": true,
    "debug.console.fontSize": 13,
    "debug.console.fontFamily": "JetBrains Mono",

    // Other settings
    "breadcrumbs.enabled": true,
    "telemetry.telemetryLevel": "off",
    "update.mode": "none",
    "security.workspace.trust.enabled": false,

    // Git Lens settings for rich annotations
    "gitlens.codeLens.enabled": true,
    "gitlens.currentLine.enabled": true,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.blame.highlight.enabled": true,
    "gitlens.statusBar.enabled": true,
    "gitlens.hovers.enabled": true,
    "gitlens.blame.format": "${author|10} ${agoOrDate|14-} ${message|50?}",
    "gitlens.defaultDateFormat": "YYYY-MM-DD HH:mm",
    "gitlens.blame.heatmap.enabled": true,
    "gitlens.blame.avatars": true,
    "gitlens.blame.compact": false,
    "gitlens.blame.toggleMode": "window",
    "gitlens.blame.highlight.locations": ["gutter", "line", "overview"],
    "gitlens.codeLens.authors.enabled": true,
    "gitlens.codeLens.recentChange.enabled": true,
    "gitlens.menus": {
        "editor": {
            "blame": true,
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        },
        "editorGroup": {
            "blame": true,
            "compare": true
        },
        "editorTab": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        },
        "explorer": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        }
    },
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false
    },

    // Git Graph settings for visualization
    "git-graph.repository.commits.showSignatureStatus": true,
    "git-graph.repository.commits.showSignatureStatusTooltip": true,
    "git-graph.repository.onLoad.showCheckedOutBranch": true,
    "git-graph.repository.onLoad.scrollToHead": true,
    "git-graph.repository.statusBar.enabled": true,
    "git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead": true,

    // General Git settings
    "git.enableSmartCommit": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableCommitSigning": true,
    "git.showInlineOpenFileAction": true,
    "git.decorations.enabled": true,
    "git.showActionButton": {
        "commit": true,
        "publish": true,
        "sync": true
    },

    // Editor settings for Git decorations
    "editor.renderWhitespace": "boundary",
    "editor.rulers": [80, 120],
    "editor.renderLineHighlight": "all",
    "editor.occurrencesHighlight": "singleFile",
    "editor.showFoldingControls": "always",
    "workbench.editor.showTabs": true,
    "workbench.editor.enablePreview": true,
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "explorer.decorations.badges": true,
    "explorer.decorations.colors": true,

    // Diff settings
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.renderSideBySide": true,
    "diffEditor.maxComputationTime": 0,
    "diffEditor.renderIndicators": true,

    // Testing Configuration
    "dotnet-test-explorer.testProjectPath": "**/*Tests.@(csproj|vbproj|fsproj)",
    "dotnet-test-explorer.autoWatch": true,
    "dotnet-test-explorer.testArguments": "/p:CollectCoverage=true",
    "dotnet-test-explorer.showCodeLens": true,
    "dotnet-test-explorer.codeLensFailed": "",
    "dotnet-test-explorer.codeLensPassed": "",
    "dotnet-test-explorer.codeLensSkipped": "",

    // .NET Test Settings
    "dotnet.unitTests.autoGenerateBindings": true,
    "dotnet.unitTests.rerunFailedTests": true,
    "dotnet.unitTests.runInParallel": true,
    "dotnet.unitTests.logPanel": true,

    // Test Explorer UI
    "testing.automaticallyOpenPeekView": "never",
    "testing.followRunningTest": true,
    "testing.gutterEnabled": true,
    "testing.openTesting": "openOnTestFailure",
    "testing.defaultGutterClickAction": "debug",
    "testing.showAllMessages": true,

    // NUnit Specific Settings
    "nunit.testProjectPath": "",
    "nunit.enableTestAdapter": true,
    "nunit.shadowCopy": true,
    "nunit.displayTestTime": true,
    "nunit.testOutputLevel": "Normal",
    "nunit.testDiscoveryMode": "FullScan",
    "nunit.testDiscoveryRegex": ".*Tests\\.dll$",

    // Test Runner Keybindings Context
    "testing.runAllTestsInFile.whenContext": "hasTests && !isRunning && !hasFailingTests",
    "testing.debugAllFailedTests.whenContext": "hasFailingTests && !isRunning",
    "testing.reRunFailedTests.whenContext": "hasFailingTests && !isRunning",
    "testing.showMostRecentOutput.whenContext": "hasTests && isRunning",
    "git.openRepositoryInParentFolders": "always",
    "vs-kubernetes": {
        "vscode-kubernetes.minikube-path-mac": "/Users/servitola/.vs-kubernetes/tools/minikube/darwin-arm64/minikube",
        "vscode-kubernetes.helm-path-mac": "/Users/servitola/.vs-kubernetes/tools/helm/darwin-arm64/helm"
    },
    "windsurf.autocompleteSpeed": "fast",
    // Windsurf AI settings
    "windsurf.ai.notifications.sound.enabled": true,
    "windsurf.ai.notifications.sound.suggestionsApproval": "Purr",

    // NUnit Specific Settings
    "nunit.testProjectPath": "",
    "nunit.enableTestAdapter": true,
    "nunit.shadowCopy": true,
    "nunit.displayTestTime": true,
    "nunit.testOutputLevel": "Normal",
    "nunit.testDiscoveryMode": "FullScan",
    "nunit.testDiscoveryRegex": ".*Tests\\.dll$",
    "nunit.testAdapterPath": "/Users/servitola/.vscode/extensions/josefpihrt.vscode-nunit-test-adapter/adapter/NUnit3.TestAdapter.dll",
    "windsurf.cascadeCommandsAllowList": [
        "git",
        "dotnet",
        "brew",
        "ollama",
        "ps",
        "colima",
        "docker",
        "python3",
        "source",
        "python",
        "cd",
        "pip",
        "pip3",
        "pkill",
        "ps",
        "top",
        "df",
        "cp",
        "cat"
    ],
    "windsurf.chatFontSize": "large",
    "windsurf.autoOpenEditedFiles": false,
    "cmake.showOptionsMovedNotification": false
}
